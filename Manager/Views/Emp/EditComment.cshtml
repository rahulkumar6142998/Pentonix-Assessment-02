@model Manager.Models.Task
@{
    ViewBag.Title = "EditComment";

}

<link href="~/Content/CSS/buttons.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="col-md-6 AssignedTasks">
            <h2>
                <button>
                    @Html.ActionLink("DashBoard", "EmpDashBoard", "Emp")
                </button>
            </h2>
        </div>

    </div>

</div>

<br />
<br />

@using (Html.BeginForm())
{<div class="container">
        <div class="container__item">
            <form class="form">
                <input type="text" name="Comment" class="form__field" placeholder="Enter Your Comment" />
                <button type="submit" value="Post" class="btn btn--primary btn--inside uppercase">Post</button>
            </form>
        </div>
    </div>


}



<style>
    .container {
        height: 100%;
    }

    a {
        color: inherit;
    }

        a:hover {
            color: $button-bg-color;
        }




    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .uppercase {
        text-transform: uppercase;
    }


    .btn {
        display: inline-block;
        background: transparent;
        color: inherit;
        font: inherit;
        border: 0;
        outline: 0;
        padding: 0;
        transition: all 200ms ease-in;
        cursor: pointer;
    }


    .form {
        width: 360px;
        background: #fff;
        font: inherit;
        box-shadow: 0 6px 10px 0 rgba(0, 0, 0, .1);
        border: 0;
        outline: 0;
        padding: 22px 18px;
    }
</style>

























@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Task</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.TicketNo)

            <div class="form-group">
                @Html.LabelFor(model => model.Task1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Task1, new { htmlAttributes = new { @class = "form-control ", disabled = "disabled", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Task1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaskStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaskStatus, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.TaskStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanedEffort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PlanedEffort, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly=true } })
                    @Html.ValidationMessageFor(model => model.PlanedEffort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@
